name: Build and Deploy Artifacts
on:
  push:
    tags:
    - release/*
jobs:
  build-and-deploy-artifacts:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Create Release Name
      run: |
        echo "${{ github.ref }}" | sed "s|^refs/tags/release/\(.*\)$|release_name=\1|" >> $GITHUB_ENV
      shell: bash

    - name: Set up Java 11
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 11
        check-latest: true

    - name: Maven Build
      run: mvn -B verify

    - name: Set up Java 16
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 16
        check-latest: true

    - name: Install jpackage prerequisites [Linux]
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get -y install fakeroot rpm

    - name: Install jpackage prerequisites [Windows]
      if: matrix.os == 'windows-latest'
      run: choco install wixtoolset
      shell: cmd

    - name: jpackage Build [Linux]
      if: matrix.os == 'ubuntu-latest'
      run: ./target/scripts/create-jpackage-linux.sh

    - name: jpackage Build [macOS]
      if: matrix.os == 'macos-latest'
      run: ./target/scripts/create-jpackage-mac.sh

    - name: jpackage Build [Windows]
      if: matrix.os == 'windows-latest'
      run: .\target\scripts\create-jpackage-win.bat
      shell: cmd

    - name: Set up GraalVM
      uses: ayltai/setup-graalvm@v1
      with:
        java-version: 11
        graalvm-version: 21.1.0
        native-image: true

    - name: Install native-image prerequisites [Linux]
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get -y install build-essential libz-dev zlib1g-dev

    - name: Install native-image prerequisites [Windows]
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: native-image Build [Linux]
      if: matrix.os == 'ubuntu-latest'
      run: ./target/scripts/create-native-image.sh

    - name: native-image Build [macOS]
      if: matrix.os == 'macos-latest'
      run: ./target/scripts/create-native-image.sh

    - name: native-image Build [Windows]
      if: matrix.os == 'windows-latest'
      run: .\target\scripts\create-native-image.bat
      shell: cmd

    - name: Deploy Artifacts [Linux]
      if: matrix.os == 'ubuntu-latest'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/malc-*.x86_64.rpm
          target/malc_*_amd64.deb
          target/malc-*.linux.amd64.tar.gz
        name: ${{ env.release_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy Artifacts [macOS]
      if: matrix.os == 'macos-latest'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/malc-*.pkg
          target/malc-*.dmg
          target/malc-*.mac.x86_64.tar.gz
        name: ${{ env.release_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy Artifacts [Windows]
      if: matrix.os == 'windows-latest'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/malc-*.exe
          target/malc-*.msi
          target/malc-*.win.amd64.zip
        name: ${{ env.release_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
